{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95712d91.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={ onSubmit } className=\"container\">\n                <input\n                    name='email'\n                    type='email'\n                    placeholder='Email'\n                    required\n                    value={ email }\n                    onChange={ onChange }\n                    className=\"authInput\"\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    required\n                    value={ password }\n                    onChange={ onChange }\n                    className=\"authInput\"\n                />\n                <input\n                    type='submit'\n                    className=\"authInput authSubmit\"\n                    value={ newAccount ? \"Create Account\" : \"Sign In\" }\n                />\n                { error && <span className=\"authError\">{ error }</span> }\n            </form>\n            <span onClick={ toggleAccount } className=\"authSwitch\">\n                { newAccount ? \"Sign In\" : \"Create Account\" }\n            </span>\n        </>\n    );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={ faTwitter }\n                color={ \"#04AAFF\" }\n                size=\"3x\"\n                style={ { marginBottom: 30 } }\n            />\n            <AuthForm />\n            <div>\n                <div className=\"authBtns\">\n                    <button onClick={ onSocialClick } name=\"google\" className=\"authBtn\">\n                        Continue with Google <FontAwesomeIcon icon={ faGoogle } />\n                    </button>\n                    <button onClick={ onSocialClick } name=\"github\" className=\"authBtn\">\n                        Continue with Github <FontAwesomeIcon icon={ faGithub } />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\") {\n                await storageService\n                    .refFromURL(nweetObj.attachmentUrl)\n                    .delete();\n            }\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    return (\n        <div className='nweet'>\n            {editing ? (\n                <>\n                    <form onSubmit={ onSubmit } className='container nweetEdit'>\n                        <input\n                            type='text'\n                            placeholder='Edit your nweet'\n                            value={ newNweet }\n                            required\n                            autoFocus\n                            onChange={ onChange }\n                            className='formInput'\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n\n                    <span onClick={ toggleEditing } className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                    <>\n                        <h4>{ nweetObj.text }</h4>\n                        {nweetObj.attachmentUrl && <img src={ nweetObj.attachmentUrl } /> }\n                        {isOwner && (\n                            <div class=\"nweet__actions\">\n                                <span onClick={ onDeleteClick }>\n                                    <FontAwesomeIcon icon={ faTrash } />\n                                </span>\n                                <span onClick={ toggleEditing }>\n                                    <FontAwesomeIcon icon={ faPencilAlt } />\n                                </span>\n                            </div>\n                        ) }\n                    </>\n                ) }\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(null);\n    return (\n        <form onSubmit={ onSubmit } className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={ nweet }\n                    onChange={ onChange }\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={ 120 }\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={ faPlus } />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={ onFileChange }\n                style={ {\n                    opacity: 0,\n                } }\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={ attachment }\n                        style={ {\n                            backgroundImage: attachment,\n                        } }\n                    />\n                    <div className=\"factoryForm__clear\" onClick={ onClearAttachment }>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={ faTimes } />\n                    </div>\n                </div>\n            ) }\n        </form>\n    );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const nweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setNweets(nweetArray);\n            });\n    }, []);\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={ userObj } />\n            <div style={ { marginTop: 30 } }>\n                { nweets.map((nweet) => (\n                    <Nweet\n                        key={ nweet.id }\n                        nweetObj={ nweet }\n                        isOwner={ nweet.creatorId === userObj.uid }\n                    />\n                )) }\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className='container'>\n            <form onSubmit={ onSubmit } className='profileForm'>\n                <input\n                    onChange={ onChange }\n                    type='text'\n                    autoFocus\n                    placeholder='Display name'\n                    value={ newDisplayName }\n                    className='formInput'\n                />\n                <input\n                    type='submit'\n                    value='Update Profile'\n                    className='formBtn'\n                    style={ {\n                        marginTop: 10,\n                    } }\n                />\n            </form>\n            <span className='formBtn cancelBtn logOut' onClick={ onLogOutClick }>\n                Log Out\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={ {\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: 50,\n            } }>\n            <li>\n                <Link to='/' style={ { marginRight: 10 } }>\n                    <FontAwesomeIcon\n                        icon={ faTwitter }\n                        color={ \"#04AAFF\" }\n                        size='2x'\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={ {\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    } }\n                >\n                    <FontAwesomeIcon icon={ faUser } color={ \"#04AAFF\" } size=\"2x\" />\n                    <span style={ { marginTop: 10 } }>\n                        { userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\" }\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={ userObj } /> }\n            <Switch>\n                { isLoggedIn ? (\n                    <div\n                        style={ {\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        } }>\n                        <Route exact path='/'>\n                            <Home userObj={ userObj } />\n                        </Route>\n                        <Route exact path='/profile'>\n                            <Profile\n                                userObj={ userObj }\n                                refreshUser={ refreshUser }\n                            />\n                        </Route>\n                    </div>\n                ) : (\n                        <>\n                            <Route exact path='/'>\n                                <Auth />\n                            </Route>\n                        </>\n                    ) }\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (<AppRouter\n                refreshUser={ refreshUser }\n                isLoggedIn={ Boolean(userObj) }\n                userObj={ userObj }\n            />) : (\"Initializing ...\") }\n        </>\n    );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport { authService } from \"fbase\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}